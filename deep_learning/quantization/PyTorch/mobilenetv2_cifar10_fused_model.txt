QuantizableMobileNetV2(
  (features): Sequential(
    (0): ConvBNActivation(
      (0): ConvReLU2d(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): ReLU(inplace=True)
      )
      (1): Identity()
      (2): Identity()
    )
    (1): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (2): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (2): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (3): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (4): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (5): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (6): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (7): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (8): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (9): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (10): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (11): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (12): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (13): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (14): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (15): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (16): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (17): QuantizableInvertedResidual(
      (conv): Sequential(
        (0): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (1): ConvBNActivation(
          (0): ConvReLU2d(
            (0): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960)
            (1): ReLU(inplace=True)
          )
          (1): Identity()
          (2): Identity()
        )
        (2): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1))
        (3): Identity()
      )
      (skip_add): FloatFunctional(
        (activation_post_process): Identity()
      )
    )
    (18): ConvBNActivation(
      (0): ConvReLU2d(
        (0): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU(inplace=True)
      )
      (1): Identity()
      (2): Identity()
    )
  )
  (classifier): Sequential(
    (0): Dropout(p=0.2, inplace=False)
    (1): Reshape()
    (2): Conv2d(1280, 1000, kernel_size=(1, 1), stride=(1, 1))
    (3): Reshape()
  )
  (quant): QuantStub()
  (dequant): DeQuantStub()
)
